{
  "minMuleVersion": "4.1.2",
  "extensionModel": {
    "types": [
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.file.common.api.matcher.FileMatcher",
            "classname": "org.mule.extension.ftp.api.FtpFileMatcher",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.ftp.api.FtpFileMatcher",
          "stereotype": {"allowedStereotypes": [{
            "namespace": "FTP",
            "type": "FTP_FILE_MATCHER"
          }]},
          "typeAlias": {"value": "matcher"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "Files created before this date are rejected. If no creation date is available, the File will be processed.",
                "example": "2015-06-03T13:21:58+00:00"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [
                    "java.time.temporal.Temporal",
                    "java.time.temporal.TemporalAdjuster",
                    "java.time.chrono.ChronoLocalDateTime",
                    "java.io.Serializable"
                  ],
                  "parent": "",
                  "classname": "java.time.LocalDateTime",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "java.time.LocalDateTime"
              },
              "type": "DateTime"
            },
            "key": {"name": "timestampSince"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "Files created after this date are rejected. If no creation date is available, the File will be processed.",
                "example": "2015-06-03T13:21:58+00:00"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [
                    "java.time.temporal.Temporal",
                    "java.time.temporal.TemporalAdjuster",
                    "java.time.chrono.ChronoLocalDateTime",
                    "java.io.Serializable"
                  ],
                  "parent": "",
                  "classname": "java.time.LocalDateTime",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "java.time.LocalDateTime"
              },
              "type": "DateTime"
            },
            "key": {"name": "timestampUntil"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "Minimum time that should have passed since a file was updated to not be rejected. This attribute works in tandem with timeUnit.",
                "example": "10000"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "notUpdatedInTheLast"}
          },
          {
            "annotations": {
              "display": {"displayModel": {
                "summary": "Maximum time that should have passed since a file was updated to not be rejected. This attribute works in tandem with timeUnit.",
                "example": "10000"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "updatedInTheLast"}
          },
          {
            "annotations": {
              "default": "SECONDS",
              "display": {"displayModel": {"summary": "Time unit to be used to interpret the parameters 'notUpdatedInTheLast' and 'updatedInTheLast'"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "java.lang.Enum",
                  "classname": "java.util.concurrent.TimeUnit",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "java.util.concurrent.TimeUnit",
                "enum": {
                  "values": [
                    "NANOSECONDS",
                    "MICROSECONDS",
                    "MILLISECONDS",
                    "SECONDS",
                    "MINUTES",
                    "HOURS",
                    "DAYS"
                  ],
                  "type": "[Ljava.lang.String;"
                }
              },
              "type": "String"
            },
            "key": {"name": "timeUnit"}
          },
          {
            "annotations": {
              "display": {"displayModel": {"summary": "A matching pattern to be applied on the file name."}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "filenamePattern"}
          },
          {
            "annotations": {
              "display": {"displayModel": {"summary": "A matching pattern to be applied on the file path"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "pathPattern"}
          },
          {
            "annotations": {
              "default": "INCLUDE",
              "display": {"displayModel": {"summary": "Indicates whether accept only directories or non directories files"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "java.lang.Enum",
                  "classname": "org.mule.extension.file.common.api.matcher.MatchPolicy",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "typeId": "org.mule.extension.file.common.api.matcher.MatchPolicy",
                "enum": {
                  "values": [
                    "REQUIRE",
                    "INCLUDE",
                    "EXCLUDE"
                  ],
                  "type": "[Ljava.lang.String;"
                }
              },
              "type": "String"
            },
            "key": {"name": "directories"}
          },
          {
            "annotations": {
              "default": "INCLUDE",
              "display": {"displayModel": {"summary": "Indicates whether accept only regular files (files which are not directories, nor symbolic links) or only not regular files"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "java.lang.Enum",
                  "classname": "org.mule.extension.file.common.api.matcher.MatchPolicy",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "typeId": "org.mule.extension.file.common.api.matcher.MatchPolicy",
                "enum": {
                  "values": [
                    "REQUIRE",
                    "INCLUDE",
                    "EXCLUDE"
                  ],
                  "type": "[Ljava.lang.String;"
                }
              },
              "type": "String"
            },
            "key": {"name": "regularFiles"}
          },
          {
            "annotations": {
              "default": "INCLUDE",
              "display": {"displayModel": {"summary": "Indicates whether accept only symbolic links files or accept only not symbolic links files"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "java.lang.Enum",
                  "classname": "org.mule.extension.file.common.api.matcher.MatchPolicy",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "typeId": "org.mule.extension.file.common.api.matcher.MatchPolicy",
                "enum": {
                  "values": [
                    "REQUIRE",
                    "INCLUDE",
                    "EXCLUDE"
                  ],
                  "type": "[Ljava.lang.String;"
                }
              },
              "type": "String"
            },
            "key": {"name": "symLinks"}
          },
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "minSize"}
          },
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "maxSize"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.file.common.api.AbstractFileAttributes",
            "classname": "org.mule.extension.ftp.api.ftp.FtpFileAttributes",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.ftp.api.ftp.FtpFileAttributes",
          "typeAlias": {"value": "FtpFileAttributes"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [
                    "java.time.temporal.Temporal",
                    "java.time.temporal.TemporalAdjuster",
                    "java.time.chrono.ChronoLocalDateTime",
                    "java.io.Serializable"
                  ],
                  "parent": "",
                  "classname": "java.time.LocalDateTime",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "java.time.LocalDateTime"
              },
              "type": "DateTime"
            },
            "key": {"name": "timestamp"}
          },
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {"type": "String"},
            "key": {
              "name": "name",
              "required": "true"
            }
          },
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {
              "name": "size",
              "required": "true"
            }
          },
          {
            "annotations": {
              "default": "false",
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "regularFile"}
          },
          {
            "annotations": {
              "default": "false",
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "directory"}
          },
          {
            "annotations": {
              "default": "false",
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "symbolicLink"}
          },
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {"type": "String"},
            "key": {
              "name": "path",
              "required": "true"
            }
          },
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {"type": "String"},
            "key": {
              "name": "fileName",
              "required": "true"
            }
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["org.mule.extension.ftp.api.proxy.ProxySettings"],
            "parent": "",
            "classname": "org.mule.extension.ftp.api.proxy.HttpTunnelProxy",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.ftp.api.proxy.HttpTunnelProxy",
          "typeAlias": {"value": "HttpTunnelProxy"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {
              "default": "",
              "display": {"displayModel": {"displayName": "Proxy host"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "host"}
          },
          {
            "annotations": {
              "default": "",
              "display": {"displayModel": {"displayName": "Proxy port"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "port"}
          },
          {
            "annotations": {
              "default": "",
              "display": {"displayModel": {"displayName": "Proxy username"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "username"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": true,
                "query": false,
                "text": false
              }},
              "default": "",
              "display": {"displayModel": {"displayName": "Proxy password"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "password"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": [
              "org.mule.extension.ftp.api.proxy.ProxySettings",
              "org.mule.runtime.api.lifecycle.Initialisable"
            ],
            "parent": "org.mule.extension.ftp.api.proxy.HttpTunnelProxy",
            "classname": "org.mule.extension.ftp.api.proxy.HttpsTunnelProxy",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.ftp.api.proxy.HttpsTunnelProxy",
          "typeAlias": {"value": "HttpsTunnelProxy"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {
              "display": {"displayModel": {"displayName": "TLS Configuration"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "typeDsl": {
                  "allowTopLevelDefinition": true,
                  "allowInlineDefinition": true
                },
                "infrastructureType": {},
                "QName": {"value": {
                  "localPart": "context",
                  "prefix": "tls",
                  "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                }},
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "org.mule.runtime.api.tls.TlsContextFactory",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": true,
                  "isAbstract": true,
                  "isMap": false
                },
                "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                "stereotype": {"allowedStereotypes": [{
                  "namespace": "TLS",
                  "type": "CONTEXT"
                }]},
                "typeAlias": {"value": "Tls"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                  "model": {"type": "String"},
                  "key": {"name": "enabledProtocols"}
                },
                {
                  "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                  "model": {"type": "String"},
                  "key": {"name": "enabledCipherSuites"}
                },
                {
                  "annotations": {
                    "layout": {"layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 0
                    }},
                    "parameterDsl": {
                      "allowInlineDefinition": true,
                      "allowReferences": false
                    },
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "infrastructureType": {},
                      "QName": {"value": {
                        "localPart": "trust-store",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }},
                      "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                      "typeId": "TrustStore"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {
                          "display": {"displayModel": {"pathModel": {
                            "fileExtensions": [],
                            "acceptsUrls": false,
                            "location": "EMBEDDED",
                            "type": "FILE"
                          }}},
                          "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                        },
                        "model": {"type": "String"},
                        "key": {"name": "path"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": true,
                            "query": false,
                            "text": false
                          }},
                          "description": {"value": "The password used to protect the trust store."}
                        },
                        "model": {"type": "String"},
                        "key": {"name": "password"}
                      },
                      {
                        "annotations": {"description": {"value": "The type of store used."}},
                        "model": {
                          "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                          "type": "String"
                        },
                        "key": {"name": "type"}
                      },
                      {
                        "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                        "model": {"type": "String"},
                        "key": {"name": "algorithm"}
                      },
                      {
                        "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                        "model": {
                          "annotations": {"default": "false"},
                          "type": "Boolean"
                        },
                        "key": {"name": "insecure"}
                      }
                    ]
                  },
                  "key": {"name": "trust-store"}
                },
                {
                  "annotations": {
                    "layout": {"layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 1
                    }},
                    "parameterDsl": {
                      "allowInlineDefinition": true,
                      "allowReferences": false
                    },
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "infrastructureType": {},
                      "QName": {"value": {
                        "localPart": "key-store",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }},
                      "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                      "typeId": "KeyStore"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {
                          "display": {"displayModel": {"pathModel": {
                            "fileExtensions": [],
                            "acceptsUrls": false,
                            "location": "EMBEDDED",
                            "type": "FILE"
                          }}},
                          "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                        },
                        "model": {"type": "String"},
                        "key": {"name": "path"}
                      },
                      {
                        "annotations": {"description": {"value": "The type of store used."}},
                        "model": {
                          "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                          "type": "String"
                        },
                        "key": {"name": "type"}
                      },
                      {
                        "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                        "model": {"type": "String"},
                        "key": {"name": "alias"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": true,
                            "query": false,
                            "text": false
                          }},
                          "description": {"value": "The password used to protect the private key."}
                        },
                        "model": {"type": "String"},
                        "key": {"name": "keyPassword"}
                      },
                      {
                        "annotations": {
                          "layout": {"layoutModel": {
                            "password": true,
                            "query": false,
                            "text": false
                          }},
                          "description": {"value": "The password used to protect the key store."}
                        },
                        "model": {"type": "String"},
                        "key": {"name": "password"}
                      },
                      {
                        "annotations": {"description": {"value": "The algorithm used by the key store."}},
                        "model": {"type": "String"},
                        "key": {"name": "algorithm"}
                      }
                    ]
                  },
                  "key": {"name": "key-store"}
                },
                {
                  "annotations": {
                    "layout": {"layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 2
                    }},
                    "parameterDsl": {
                      "allowInlineDefinition": true,
                      "allowReferences": false
                    },
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "of": [
                      {
                        "annotations": {
                          "infrastructureType": {},
                          "QName": {"value": {
                            "localPart": "standard-revocation-check",
                            "prefix": "tls",
                            "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                          }},
                          "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                          "typeId": "standard-revocation-check"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                            "model": {
                              "annotations": {"default": "false"},
                              "type": "Boolean"
                            },
                            "key": {"name": "onlyEndEntities"}
                          },
                          {
                            "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                            "model": {
                              "annotations": {"default": "false"},
                              "type": "Boolean"
                            },
                            "key": {"name": "preferCrls"}
                          },
                          {
                            "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                            "model": {
                              "annotations": {"default": "false"},
                              "type": "Boolean"
                            },
                            "key": {"name": "noFallback"}
                          },
                          {
                            "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                            "model": {
                              "annotations": {"default": "false"},
                              "type": "Boolean"
                            },
                            "key": {"name": "softFail"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "infrastructureType": {},
                          "QName": {"value": {
                            "localPart": "custom-ocsp-responder",
                            "prefix": "tls",
                            "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                          }},
                          "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                          "typeId": "custom-ocsp-responder"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                            "model": {"type": "String"},
                            "key": {"name": "url"}
                          },
                          {
                            "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                            "model": {"type": "String"},
                            "key": {"name": "certAlias"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "infrastructureType": {},
                          "QName": {"value": {
                            "localPart": "crl-file",
                            "prefix": "tls",
                            "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                          }},
                          "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                          "typeId": "crl-file"
                        },
                        "type": "Object",
                        "fields": [{
                          "annotations": {"description": {"value": "The path to the CRL file."}},
                          "model": {"type": "String"},
                          "key": {"name": "path"}
                        }]
                      }
                    ],
                    "annotations": {
                      "infrastructureType": {},
                      "extensibleType": {},
                      "typeId": "RevocationCheck"
                    },
                    "type": "Union"
                  },
                  "key": {"name": "revocation-check"}
                }
              ]
            },
            "key": {"name": "tlsContextFactory"}
          },
          {
            "annotations": {
              "default": "",
              "display": {"displayModel": {"displayName": "Proxy host"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "host"}
          },
          {
            "annotations": {
              "default": "",
              "display": {"displayModel": {"displayName": "Proxy port"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "port"}
          },
          {
            "annotations": {
              "default": "",
              "display": {"displayModel": {"displayName": "Proxy username"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "username"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": true,
                "query": false,
                "text": false
              }},
              "default": "",
              "display": {"displayModel": {"displayName": "Proxy password"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {"name": "password"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "",
            "classname": "org.mule.extension.ftp.api.proxy.ProxySettings",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": true,
            "isAbstract": true,
            "isMap": false
          },
          "typeId": "org.mule.extension.ftp.api.proxy.ProxySettings",
          "stereotype": {"allowedStereotypes": [{
            "namespace": "FTP",
            "type": "PROXY_SETTINGS"
          }]},
          "typeAlias": {"value": "ProxySettings"}
        },
        "type": "Object",
        "fields": []
      }
    ],
    "messageSources": [],
    "functions": [],
    "configurations": [{
      "externalLibraryModels": [],
      "operations": [
        {
          "displayModel": {"summary": "Copies a file"},
          "semanticTerms": [],
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Copies the file at the sourcePath into the targetPath. <p> If targetPath doesn't exist, and neither does its parent, then an attempt will be made to create depending on the value of the createParentFolder argument. If such argument is , then a FTP:ILLEGAL_PATH will be thrown. <p> If the target file already exists, then it will be overwritten if the overwrite argument is true. Otherwise, FTP:FILE_ALREADY_EXISTS error will be thrown. <p> As for the sourcePath, it can either be a file or a directory. If it points to a directory, then it will be copied recursively.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"pathModel": {
                    "fileExtensions": [],
                    "acceptsUrls": false,
                    "location": "EXTERNAL",
                    "type": "ANY"
                  }},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "the path to the file to be copied",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sourcePath",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"pathModel": {
                    "fileExtensions": [],
                    "acceptsUrls": false,
                    "location": "EXTERNAL",
                    "type": "DIRECTORY"
                  }},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "the target directory where the file is going to be copied",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetPath",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "true",
                  "description": "whether or not to attempt creating any parent directories which don't exists.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "createParentDirectories",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "whether or not overwrite the file if the target destination already exists.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "overwrite",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "copied file's new name. If not provided, original file name will be kept.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "renameTo",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "FTP",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect-forever"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ReconnectionStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 8
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "copy",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "FTP",
              "type": "PROCESSOR"
            },
            "namespace": "FTP",
            "type": "COPY"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "FTP:FILE_ALREADY_EXISTS",
            "FTP:RETRY_EXHAUSTED",
            "FTP:ILLEGAL_PATH",
            "FTP:CONNECTIVITY"
          ]
        },
        {
          "displayModel": {"summary": "Creates a new directory"},
          "semanticTerms": [],
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Creates a new directory on directoryPath",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"pathModel": {
                    "fileExtensions": [],
                    "acceptsUrls": false,
                    "location": "EXTERNAL",
                    "type": "DIRECTORY"
                  }},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "the new directory's name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "directoryPath",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "FTP",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect-forever"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ReconnectionStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "createDirectory",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "FTP",
              "type": "PROCESSOR"
            },
            "namespace": "FTP",
            "type": "CREATE_DIRECTORY"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "FTP:FILE_ALREADY_EXISTS",
            "FTP:RETRY_EXHAUSTED",
            "FTP:ILLEGAL_PATH",
            "FTP:ACCESS_DENIED",
            "FTP:CONNECTIVITY"
          ]
        },
        {
          "displayModel": {"summary": "Deletes a file"},
          "semanticTerms": [],
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Deletes the file pointed by path, provided that it's not locked",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"pathModel": {
                    "fileExtensions": [],
                    "acceptsUrls": false,
                    "location": "EXTERNAL",
                    "type": "ANY"
                  }},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "the path to the file to be deleted",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "path",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "FTP",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect-forever"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ReconnectionStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "delete",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "FTP",
              "type": "PROCESSOR"
            },
            "namespace": "FTP",
            "type": "DELETE"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "FTP:RETRY_EXHAUSTED",
            "FTP:ILLEGAL_PATH",
            "FTP:ACCESS_DENIED",
            "FTP:CONNECTIVITY"
          ]
        },
        {
          "displayModel": {"summary": "List all the files from given directory"},
          "semanticTerms": [],
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Lists all the files in the directoryPath which match the given matcher. <p> If the listing encounters a directory, the output list will include its contents depending on the value of the recursive parameter. <p>",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"pathModel": {
                    "fileExtensions": [],
                    "acceptsUrls": false,
                    "location": "EXTERNAL",
                    "type": "DIRECTORY"
                  }},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "the path to the directory to be listed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "directoryPath",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "whether to include the contents of sub-directories. Defaults to false.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "recursive",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "Matcher to filter the listed files",
                    "displayName": "File Matching Rules"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "a matcher used to filter the output list",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "@ref:org.mule.extension.ftp.api.FtpFileMatcher"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "matcher",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [{
                    "namespace": "FTP",
                    "type": "FTP_FILE_MATCHER"
                  }],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": true,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "timeBetweenSizeCheck",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": true,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "timeBetweenSizeCheckUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "FTP",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "Configure if repeatable streams should be used and their behaviour",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-object-streaming-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "of": [
                      {
                        "annotations": {
                          "infrastructureType": {},
                          "typeId": "repeatable-in-memory-iterable"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "This is the amount of instances that will be initially be allowed to be kept in memory in order to consume the stream and provide random access to it. If the stream contains more data than can fit into this buffer, then it will be expanded according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize. Default value is 100 instances."}},
                            "model": {
                              "annotations": {
                                "default": "100",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "initialBufferSize"}
                          },
                          {
                            "annotations": {"description": {"value": "This is by how much will the buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full. Default value is 100 instances."}},
                            "model": {
                              "annotations": {
                                "default": "100",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "bufferSizeIncrement"}
                          },
                          {
                            "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                            "model": {
                              "annotations": {
                                "default": "500",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "maxBufferSize"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "QName": {"value": {
                            "localPart": "repeatable-file-store-iterable",
                            "prefix": "ee",
                            "namespaceURI": "http://www.mulesoft.org/schema/mule/ee/core"
                          }},
                          "infrastructureType": {},
                          "typeId": "repeatable-file-store-iterable"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "This is the maximum amount of instances that will be kept in memory. If more than that is required, then it will start to buffer the content on disk."}},
                            "model": {
                              "annotations": {
                                "default": "100",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "inMemoryObjects"}
                          },
                          {
                            "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                            "model": {
                              "annotations": {
                                "default": "KB",
                                "enum": {
                                  "values": [
                                    "BYTE",
                                    "KB",
                                    "MB",
                                    "GB"
                                  ],
                                  "type": "[Ljava.lang.String;"
                                }
                              },
                              "type": "String"
                            },
                            "key": {"name": "bufferUnit"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "infrastructureType": {},
                          "description": {"value": "This configuration allows the stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                          "typeId": "non-repeatable-iterable"
                        },
                        "type": "Object",
                        "fields": []
                      }
                    ],
                    "format": "java",
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "ObjectStreamingStrategy"
                    },
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "streamingStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 10
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 4
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect-forever"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ReconnectionStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 11
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "item": {
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": ["java.io.Serializable"],
                    "parent": "",
                    "classname": "org.mule.runtime.api.message.Message",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": false,
                    "genericTypes": [],
                    "isInterface": true,
                    "isAbstract": true,
                    "isMap": false
                  },
                  "typeId": "org.mule.runtime.api.message.Message"
                },
                "type": "Object",
                "fields": [
                  {
                    "model": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "java.lang.Object",
                          "hasDefaultConstructor": true,
                          "isInstantiable": true,
                          "isFinal": false,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "typeId": "java.lang.Object",
                        "typeAlias": {"value": "Object"}
                      },
                      "type": "Object",
                      "fields": []
                    },
                    "key": {
                      "name": "payload",
                      "required": "true"
                    }
                  },
                  {
                    "model": {"type": "@ref:org.mule.extension.ftp.api.ftp.FtpFileAttributes"},
                    "key": {
                      "name": "attributes",
                      "required": "true"
                    }
                  }
                ]
              },
              "format": "java",
              "annotations": {"classInformation": {
                "implementedInterfaces": ["org.mule.sdk.api.runtime.streaming.PagingProvider"],
                "parent": "",
                "classname": "org.mule.runtime.extension.api.runtime.streaming.PagingProvider",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [
                  "org.mule.extension.ftp.internal.connection.FtpFileSystem",
                  "org.mule.runtime.extension.api.runtime.operation.Result"
                ],
                "isInterface": true,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": true,
          "requiresConnection": true,
          "blocking": true,
          "name": "list",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "FTP",
              "type": "PROCESSOR"
            },
            "namespace": "FTP",
            "type": "LIST"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "FTP:ILLEGAL_PATH",
            "FTP:ACCESS_DENIED"
          ]
        },
        {
          "displayModel": {"summary": "Moves a file"},
          "semanticTerms": [],
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Moves the file at the sourcePath into the targetPath. <p> t, and neither does its parent, then an attempt will be made to create depending on the value of the createParentFolder argument. If such argument is , then a FTP:ILLEGAL_PATH will be thrown. <p> If the target file already exists, then it will be overwritten if the overwrite argument is true. Otherwise, FTP:FILE_ALREADY_EXISTS error will be thrown. <p> As for the sourcePath, it can either be a file or a directory. If it points to a directory, then it will be moved recursively.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"pathModel": {
                    "fileExtensions": [],
                    "acceptsUrls": false,
                    "location": "EXTERNAL",
                    "type": "ANY"
                  }},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "the path to the file to be copied",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "sourcePath",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"pathModel": {
                    "fileExtensions": [],
                    "acceptsUrls": false,
                    "location": "EXTERNAL",
                    "type": "DIRECTORY"
                  }},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "the target directory",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetPath",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "true",
                  "description": "whether or not to attempt creating any parent directories which don't exists.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "createParentDirectories",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "whether or not overwrite the file if the target destination already exists.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "overwrite",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "moved file's new name. If not provided, original file name will be kept.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "renameTo",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "FTP",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect-forever"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ReconnectionStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 8
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "move",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "FTP",
              "type": "PROCESSOR"
            },
            "namespace": "FTP",
            "type": "MOVE"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "FTP:FILE_ALREADY_EXISTS",
            "FTP:RETRY_EXHAUSTED",
            "FTP:ILLEGAL_PATH",
            "FTP:CONNECTIVITY"
          ]
        },
        {
          "displayModel": {"summary": "Obtains the content and metadata of a file at a given path"},
          "semanticTerms": [],
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Obtains the content and metadata of a file at a given path. The operation itself returns a Message which payload is a InputStream with the file's content, and the metadata is represent as a FtpFileAttributes object that's placed as the message Message#getAttributes() attributes. <p> If the lock parameter is set to true, then a file system level lock will be placed on the file until the input stream this operation returns is closed or fully consumed. Because the lock is actually provided by the host file system, its behavior might change depending on the mounted drive and the operation system on which mule is running. Take that into consideration before blindly relying on this lock. <p> This method also makes a best effort to determine the mime type of the file being read. The file's extension will be used to make an educated guess on the file's mime type. The user also has the chance to force the output encoding and mimeType through the outputEncoding and outputMimeType optional parameters.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {
                    "displayName": "File Path",
                    "pathModel": {
                      "fileExtensions": [],
                      "acceptsUrls": false,
                      "location": "EXTERNAL",
                      "type": "FILE"
                    }
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "the path to the file to be read",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "path",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "whether or not to lock the file. Defaults to false.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "lock",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": true,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "timeBetweenSizeCheck",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "java.util.concurrent.TimeUnit",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "java.util.concurrent.TimeUnit",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": true,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "timeBetweenSizeCheckUnit",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The mime type of the payload that this operation outputs.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "outputMimeType",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The encoding of the payload that this operation outputs.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "outputEncoding",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 8
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "FTP",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "Configure if repeatable streams should be used and their behaviour",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-byte-streaming-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "type": {
                    "of": [
                      {
                        "annotations": {
                          "infrastructureType": {},
                          "typeId": "repeatable-in-memory-stream"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "This is the amount of memory that will be allocated in order to consume the stream and provide random access to it. If the stream contains more data than can be fit into this buffer, then it will be expanded by according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "initialBufferSize"}
                          },
                          {
                            "annotations": {"description": {"value": "This is by how much will be buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "bufferSizeIncrement"}
                          },
                          {
                            "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                            "model": {
                              "annotations": {
                                "default": "1024",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "maxBufferSize"}
                          },
                          {
                            "annotations": {"description": {"value": "The unit in which all these attributes are expressed"}},
                            "model": {
                              "annotations": {
                                "default": "KB",
                                "enum": {
                                  "values": [
                                    "BYTE",
                                    "KB",
                                    "MB",
                                    "GB"
                                  ],
                                  "type": "[Ljava.lang.String;"
                                }
                              },
                              "type": "String"
                            },
                            "key": {"name": "bufferUnit"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "QName": {"value": {
                            "localPart": "repeatable-file-store-stream",
                            "prefix": "ee",
                            "namespaceURI": "http://www.mulesoft.org/schema/mule/ee/core"
                          }},
                          "infrastructureType": {},
                          "typeId": "repeatable-file-store-stream"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "Defines the maximum memory that the stream should use to keep data in memory. If more than that is consumed then it will start to buffer the content on disk."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "inMemorySize"}
                          },
                          {
                            "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                            "model": {
                              "annotations": {
                                "default": "KB",
                                "enum": {
                                  "values": [
                                    "BYTE",
                                    "KB",
                                    "MB",
                                    "GB"
                                  ],
                                  "type": "[Ljava.lang.String;"
                                }
                              },
                              "type": "String"
                            },
                            "key": {"name": "bufferUnit"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "infrastructureType": {},
                          "description": {"value": "This configuration allows the input stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                          "typeId": "non-repeatable-stream"
                        },
                        "type": "Object",
                        "fields": []
                      }
                    ],
                    "format": "java",
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "ByteStreamingStrategy"
                    },
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "streamingStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Output",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"displayName": "Target Variable"},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of a variable on which the operation's output will be placed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "target",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 9
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "Target Value"},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "#[payload]",
                  "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "REQUIRED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "targetValue",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 11
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 4
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect-forever"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ReconnectionStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 12
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": {
                "validMimeTypes": ["*/*"],
                "id": "*/*",
                "label": "*/*"
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.io.Closeable"],
                "parent": "",
                "classname": "java.io.InputStream",
                "hasDefaultConstructor": true,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Binary"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.ftp.api.ftp.FtpFileAttributes"
            }
          },
          "supportsStreaming": true,
          "requiresConnection": true,
          "blocking": true,
          "name": "read",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "FTP",
              "type": "PROCESSOR"
            },
            "namespace": "FTP",
            "type": "READ"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "FTP:FILE_LOCK",
            "FTP:RETRY_EXHAUSTED",
            "FTP:ILLEGAL_PATH",
            "FTP:ACCESS_DENIED",
            "FTP:CONNECTIVITY"
          ]
        },
        {
          "displayModel": {"summary": "Renames a file"},
          "semanticTerms": [],
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Renames the file pointed by path to the name provided on the to parameter <p> to argument should not contain any path separator. FTP:ILLEGAL_PATH will be thrown if this precondition is not honored.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"pathModel": {
                    "fileExtensions": [],
                    "acceptsUrls": false,
                    "location": "EXTERNAL",
                    "type": "ANY"
                  }},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "the path to the file to be renamed",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "path",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"displayName": "New Name"},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "the file's new name",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "to",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "whether or not overwrite the file if the target destination already exists.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "overwrite",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "FTP",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect-forever"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ReconnectionStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "rename",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "FTP",
              "type": "PROCESSOR"
            },
            "namespace": "FTP",
            "type": "RENAME"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "FTP:FILE_ALREADY_EXISTS",
            "FTP:RETRY_EXHAUSTED",
            "FTP:ILLEGAL_PATH",
            "FTP:ACCESS_DENIED",
            "FTP:CONNECTIVITY"
          ]
        },
        {
          "displayModel": {"summary": "Writes the given \"Content\" in the file pointed by \"Path\""},
          "semanticTerms": [],
          "kind": "operation",
          "executionType": "BLOCKING",
          "description": "Writes the content into the file pointed by path. <p> If the directory on which the file is attempting to be written doesn't exist, then the operation will either throw FTP:ILLEGAL_PATH error or create such folder depending on the value of the createParentDirectory. <p> If the file itself already exists, then the behavior depends on the supplied mode. <p> This operation also supports locking support depending on the value of the lock argument, but following the same rules and considerations as described in the read operation.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "displayModel": {"pathModel": {
                    "fileExtensions": [],
                    "acceptsUrls": false,
                    "location": "EXTERNAL",
                    "type": "FILE"
                  }},
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "the path of the file to be written",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": true,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "path",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {"summary": "Content to be written into the file"},
                  "semanticTerms": [],
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "the content to be written into the file. Defaults to the current Message payload",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.io.Closeable"],
                      "parent": "",
                      "classname": "java.io.InputStream",
                      "hasDefaultConstructor": true,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Any"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "content",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "true",
                  "description": "whether or not to attempt creating any parent directories which don't exists.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "createParentDirectories",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "false",
                  "description": "whether or not to lock the file. Defaults to false",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "lock",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "displayModel": {
                    "summary": "How the file is going to be written",
                    "displayName": "Write Mode"
                  },
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "defaultValue": "OVERWRITE",
                  "description": "a FileWriteMode. Defaults to OVERWRITE",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "java.lang.Enum",
                        "classname": "org.mule.extension.file.common.api.FileWriteMode",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "typeId": "org.mule.extension.file.common.api.FileWriteMode",
                      "enum": {
                        "values": [
                          "OVERWRITE",
                          "APPEND",
                          "CREATE_NEW"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "mode",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 5
                  },
                  "allowedStereotypeModels": [],
                  "isComponentId": false
                },
                {
                  "semanticTerms": [],
                  "role": "BEHAVIOUR",
                  "description": "The name of the configuration to be used to execute this component",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {
                      "classInformation": {
                        "implementedInterfaces": [],
                        "parent": "",
                        "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": true,
                        "isAbstract": true,
                        "isMap": false
                      },
                      "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                    },
                    "type": "Object",
                    "fields": []
                  },
                  "required": true,
                  "expressionSupport": "NOT_SUPPORTED",
                  "fieldValueProviderModels": [],
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": true
                  },
                  "name": "config-ref",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 6
                  },
                  "allowedStereotypeModels": [{
                    "parent": {
                      "namespace": "MULE",
                      "type": "MODULE_CONFIG"
                    },
                    "namespace": "FTP",
                    "type": "CONFIG"
                  }],
                  "isComponentId": false
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Error Mappings",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Set of error mappings",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 12},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "error-mappings",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }},
                  "sinceMuleVersion": {"version": "4.4.0"}
                },
                "type": {
                  "item": {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "errorMapping"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {
                            "typeId": "errorTypeMatcher",
                            "enum": {
                              "values": [
                                "ANY",
                                "REDELIVERY_EXHAUSTED",
                                "TRANSFORMATION",
                                "EXPRESSION",
                                "SECURITY",
                                "CLIENT_SECURITY",
                                "SERVER_SECURITY",
                                "ROUTING",
                                "CONNECTIVITY",
                                "RETRY_EXHAUSTED",
                                "TIMEOUT"
                              ],
                              "type": "[Ljava.lang.String;"
                            }
                          },
                          "type": "String"
                        },
                        "key": {"name": "source"}
                      },
                      {
                        "model": {
                          "format": {
                            "validMimeTypes": ["text/plain"],
                            "id": "text",
                            "label": "Text"
                          },
                          "annotations": {"typeId": "errorTypeDefinition"},
                          "type": "String"
                        },
                        "key": {
                          "name": "target",
                          "required": "true"
                        }
                      }
                    ]
                  },
                  "format": "java",
                  "annotations": {
                    "typeDsl": {
                      "allowTopLevelDefinition": false,
                      "allowInlineDefinition": true
                    },
                    "infrastructureType": {},
                    "description": {"value": "Determines that an error thrown by this operation should be mapped to another"}
                  },
                  "type": "Array"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "errorMappings",
                "layoutModel": {
                  "password": false,
                  "tabName": "Error Mapping",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 3
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "reconnect-forever"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                          "model": {
                            "annotations": {"default": "true"},
                            "type": "Boolean"
                          },
                          "key": {"name": "blocking"}
                        }
                      ]
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ReconnectionStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 8
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "Void"
            }
          },
          "supportsStreaming": false,
          "requiresConnection": true,
          "blocking": true,
          "name": "write",
          "stereotype": {
            "parent": {
              "parent": {
                "namespace": "MULE",
                "type": "PROCESSOR"
              },
              "namespace": "FTP",
              "type": "PROCESSOR"
            },
            "namespace": "FTP",
            "type": "WRITE"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": [
            "FTP:FILE_LOCK",
            "FTP:ILLEGAL_CONTENT",
            "FTP:FILE_ALREADY_EXISTS",
            "FTP:RETRY_EXHAUSTED",
            "FTP:ILLEGAL_PATH",
            "FTP:ACCESS_DENIED",
            "FTP:CONNECTIVITY"
          ]
        }
      ],
      "messageSources": [{
        "displayModel": {
          "summary": "Triggers when a new file is created in a directory",
          "displayName": "On New or Updated File"
        },
        "errorCallback": {
          "name": "onError",
          "description": "",
          "modelProperties": {},
          "parameterGroupModels": [{
            "name": "Post processing action",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false
            },
            "description": "",
            "modelProperties": {},
            "parameters": [
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "false",
                "description": "Whether each file should be deleted after processing or not",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {"typeId": "boolean"},
                  "type": "Boolean"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "autoDelete",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 18
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"pathModel": {
                  "fileExtensions": [],
                  "acceptsUrls": false,
                  "location": "EXTERNAL",
                  "type": "DIRECTORY"
                }},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "If provided, each processed file will be moved to a directory pointed by this path.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "moveToDirectory",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 19
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "This parameter works in tandem with moveToDirectory. Use this parameter to enter the name under which the file should be moved. Do not set this parameter if moveToDirectory hasn't been set as well.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "renameTo",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 20
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "true",
                "description": "Whether any of the post actions (autoDelete and moveToDirectory) should also be applied in case the file failed to be processed. If set to false, no failed files will be moved nor deleted.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {"typeId": "boolean"},
                  "type": "Boolean"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "applyPostActionWhenFailed",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 21
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }
            ],
            "exclusiveParametersModels": [],
            "showInDsl": false
          }]
        },
        "semanticTerms": [],
        "kind": "source",
        "description": "Polls a directory looking for files that have been created on it. One message will be generated for each file that is found. <p> The key part of this functionality is how to determine that a file is actually new. There're three strategies for that: <ul> <li>Set the <i>autoDelete<\/i> parameter to <i>true<\/i>: This will delete each processed file after it has been processed, causing all files obtained in the next poll to be necessarily new<\/li> <li>Set <i>moveToDirectory<\/i> parameter: This will move each processed file to a different directory after it has been processed, achieving the same effect as <i>autoDelete<\/i> but without loosing the file<\/li> <li><\/li> <li>Use the <i>watermarkEnabled<\/i> parameter to only pick files that have been created or updated after the last poll was executed.<\/li> <\/ul> <p> A matcher can also be used for additional filtering of files.",
        "modelProperties": {},
        "parameterGroupModels": [
          {
            "name": "General",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false,
              "order": 1
            },
            "description": "",
            "modelProperties": {},
            "parameters": [
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "The directory on which polled files are contained",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "directory",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"summary": "Whether or not to also catch files created on sub directories"},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "true",
                "description": "Whether or not to also files contained in sub directories.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {"typeId": "boolean"},
                  "type": "Boolean"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "recursive",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"displayName": "Matcher"},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A matcher used to filter events on files which do not meet the matcher's criteria",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "@ref:org.mule.extension.ftp.api.FtpFileMatcher"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": true
                },
                "name": "matcher",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [{
                  "namespace": "FTP",
                  "type": "FTP_FILE_MATCHER"
                }],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "false",
                "description": "Controls whether or not to do watermarking, and if so, if the watermark should consider the file's modification or creation timestamps",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {"typeId": "boolean"},
                  "type": "Boolean"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "watermarkEnabled",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"summary": "Wait time in milliseconds between size checks to determine if a file is ready to be read."},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Wait time in milliseconds between size checks to determine if a file is ready to be read. This allows a file write to complete before processing. You can disable this feature by omitting a value. When enabled, Mule performs two size checks waiting the specified time between calls. If both checks return the same value, the file is ready to be read.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": ["java.lang.Comparable"],
                      "parent": "java.lang.Number",
                      "classname": "java.lang.Long",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    },
                    "int": {}
                  },
                  "type": "Number"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": true,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "timeBetweenSizeCheck",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"summary": "Time unit to be used in the wait time between size checks"},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "A TimeUnit which qualifies the #timeBetweenSizeCheck attribute.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": [],
                      "parent": "java.lang.Enum",
                      "classname": "java.util.concurrent.TimeUnit",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    },
                    "typeId": "java.util.concurrent.TimeUnit",
                    "enum": {
                      "values": [
                        "NANOSECONDS",
                        "MICROSECONDS",
                        "MILLISECONDS",
                        "SECONDS",
                        "MINUTES",
                        "HOURS",
                        "DAYS"
                      ],
                      "type": "[Ljava.lang.String;"
                    }
                  },
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": true,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "timeBetweenSizeCheckUnit",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "The mime type of the payload that this operation outputs.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "outputMimeType",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "The encoding of the payload that this operation outputs.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "outputEncoding",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 8
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "The name of the configuration to be used to execute this component",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [],
                      "isInterface": true,
                      "isAbstract": true,
                      "isMap": false
                    },
                    "typeId": "org.mule.runtime.extension.api.runtime.config.ConfigurationProvider"
                  },
                  "type": "Object",
                  "fields": []
                },
                "required": true,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": true
                },
                "name": "config-ref",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 11
                },
                "allowedStereotypeModels": [{
                  "parent": {
                    "namespace": "MULE",
                    "type": "MODULE_CONFIG"
                  },
                  "namespace": "FTP",
                  "type": "CONFIG"
                }],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": false,
                "description": "Whether this source should only be executed on the primary node when runnning in Cluster",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "Boolean"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "primaryNodeOnly",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 22
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Configures the scheduler that triggers the polling",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 10},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "scheduling-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "type": "@ref:org.mule.runtime.api.scheduler.SchedulingStrategy"
                },
                "required": true,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "schedulingStrategy",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 9
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Configure if repeatable streams should be used and their behaviour",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-byte-streaming-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "of": [
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "repeatable-in-memory-stream"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "This is the amount of memory that will be allocated in order to consume the stream and provide random access to it. If the stream contains more data than can be fit into this buffer, then it will be expanded by according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize."}},
                          "model": {
                            "annotations": {
                              "default": "512",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "initialBufferSize"}
                        },
                        {
                          "annotations": {"description": {"value": "This is by how much will be buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full."}},
                          "model": {
                            "annotations": {
                              "default": "512",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "bufferSizeIncrement"}
                        },
                        {
                          "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                          "model": {
                            "annotations": {
                              "default": "1024",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "maxBufferSize"}
                        },
                        {
                          "annotations": {"description": {"value": "The unit in which all these attributes are expressed"}},
                          "model": {
                            "annotations": {
                              "default": "KB",
                              "enum": {
                                "values": [
                                  "BYTE",
                                  "KB",
                                  "MB",
                                  "GB"
                                ],
                                "type": "[Ljava.lang.String;"
                              }
                            },
                            "type": "String"
                          },
                          "key": {"name": "bufferUnit"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "QName": {"value": {
                          "localPart": "repeatable-file-store-stream",
                          "prefix": "ee",
                          "namespaceURI": "http://www.mulesoft.org/schema/mule/ee/core"
                        }},
                        "infrastructureType": {},
                        "typeId": "repeatable-file-store-stream"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "Defines the maximum memory that the stream should use to keep data in memory. If more than that is consumed then it will start to buffer the content on disk."}},
                          "model": {
                            "annotations": {
                              "default": "512",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "inMemorySize"}
                        },
                        {
                          "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                          "model": {
                            "annotations": {
                              "default": "KB",
                              "enum": {
                                "values": [
                                  "BYTE",
                                  "KB",
                                  "MB",
                                  "GB"
                                ],
                                "type": "[Ljava.lang.String;"
                              }
                            },
                            "type": "String"
                          },
                          "key": {"name": "bufferUnit"}
                        }
                      ]
                    },
                    {
                      "annotations": {
                        "infrastructureType": {},
                        "description": {"value": "This configuration allows the input stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                        "typeId": "non-repeatable-stream"
                      },
                      "type": "Object",
                      "fields": []
                    }
                  ],
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "ByteStreamingStrategy"
                  },
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "streamingStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 10
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Defines a policy for processing the redelivery of the same message",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 1},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-redelivery-policy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "RedeliveryPolicy"
                  },
                  "type": "Object",
                  "fields": [
                    {
                      "annotations": {"description": {"value": "The maximum number of times a message can be redelivered and processed unsuccessfully before triggering process-failed-message"}},
                      "model": {
                        "annotations": {
                          "default": "5",
                          "int": {}
                        },
                        "type": "Number"
                      },
                      "key": {"name": "maxRedeliveryCount"}
                    },
                    {
                      "annotations": {"description": {"value": "The secure hashing algorithm to use. If not set, the default is SHA-256."}},
                      "model": {"type": "String"},
                      "key": {"name": "messageDigestAlgorithm"}
                    },
                    {
                      "annotations": {
                        "flattened": {},
                        "description": {"value": "Defines which strategy is used to identify the messages."}
                      },
                      "model": {
                        "annotations": {
                          "exclusiveOptionals": {
                            "isOneRequired": true,
                            "exclusiveParameterNames": [
                              "useSecureHash",
                              "idExpression"
                            ]
                          },
                          "typeId": "RedeliveryPolicyMessageIdentifier"
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "Whether to use a secure hash algorithm to identify a redelivered message"}},
                            "model": {
                              "annotations": {"default": "true"},
                              "type": "Boolean"
                            },
                            "key": {"name": "useSecureHash"}
                          },
                          {
                            "annotations": {"description": {"value": "Defines one or more expressions to use to determine when a message has been redelivered. This property may only be set if useSecureHash is false."}},
                            "model": {"type": "String"},
                            "key": {"name": "idExpression"}
                          }
                        ]
                      },
                      "key": {"name": "MessageIdentifier"}
                    },
                    {
                      "annotations": {
                        "description": {"value": "The object store where the redelivery counter for each message is going to be stored."},
                        "stereotype": {"allowedStereotypes": [{
                          "namespace": "OS",
                          "type": "OBJECT_STORE"
                        }]}
                      },
                      "model": {"type": "@ref:org.mule.runtime.api.store.ObjectStore"},
                      "key": {"name": "objectStore"}
                    }
                  ]
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "redeliveryPolicy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Redelivery",
                  "query": false,
                  "text": false,
                  "order": 12
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }
            ],
            "exclusiveParametersModels": [],
            "showInDsl": false
          },
          {
            "name": "Connection",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false,
              "order": 2
            },
            "description": "",
            "modelProperties": {},
            "parameters": [{
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "A retry strategy in case of connectivity errors",
              "modelProperties": {
                "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                  "localPart": "abstract-reconnection-strategy",
                  "prefix": "mule",
                  "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                }}
              },
              "type": {
                "of": [
                  {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "reconnect"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                        "model": {
                          "annotations": {
                            "default": "2000",
                            "classInformation": {
                              "implementedInterfaces": ["java.lang.Comparable"],
                              "parent": "java.lang.Number",
                              "classname": "java.lang.Long",
                              "hasDefaultConstructor": false,
                              "isInstantiable": false,
                              "isFinal": true,
                              "genericTypes": [],
                              "isInterface": false,
                              "isAbstract": false,
                              "isMap": false
                            },
                            "int": {}
                          },
                          "type": "Number"
                        },
                        "key": {"name": "frequency"}
                      },
                      {
                        "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                        "model": {
                          "annotations": {"default": "true"},
                          "type": "Boolean"
                        },
                        "key": {"name": "blocking"}
                      },
                      {
                        "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                        "model": {
                          "annotations": {
                            "default": "2",
                            "int": {}
                          },
                          "type": "Number"
                        },
                        "key": {"name": "count"}
                      }
                    ]
                  },
                  {
                    "annotations": {
                      "infrastructureType": {},
                      "typeId": "reconnect-forever"
                    },
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                        "model": {
                          "annotations": {
                            "default": "2000",
                            "classInformation": {
                              "implementedInterfaces": ["java.lang.Comparable"],
                              "parent": "java.lang.Number",
                              "classname": "java.lang.Long",
                              "hasDefaultConstructor": false,
                              "isInstantiable": false,
                              "isFinal": true,
                              "genericTypes": [],
                              "isInterface": false,
                              "isAbstract": false,
                              "isMap": false
                            },
                            "int": {}
                          },
                          "type": "Number"
                        },
                        "key": {"name": "frequency"}
                      },
                      {
                        "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                        "model": {
                          "annotations": {"default": "true"},
                          "type": "Boolean"
                        },
                        "key": {"name": "blocking"}
                      }
                    ]
                  }
                ],
                "format": "java",
                "annotations": {
                  "infrastructureType": {},
                  "typeId": "ReconnectionStrategy"
                },
                "type": "Union"
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": true,
                "allowsReferences": false
              },
              "name": "reconnectionStrategy",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 13
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            }],
            "exclusiveParametersModels": [],
            "showInDsl": false
          }
        ],
        "hasResponse": false,
        "output": {
          "hasDynamicType": false,
          "description": "",
          "modelProperties": {},
          "type": {
            "format": {
              "validMimeTypes": ["*/*"],
              "id": "*/*",
              "label": "*/*"
            },
            "annotations": {"classInformation": {
              "implementedInterfaces": ["java.io.Closeable"],
              "parent": "",
              "classname": "java.io.InputStream",
              "hasDefaultConstructor": true,
              "isInstantiable": false,
              "isFinal": false,
              "genericTypes": [],
              "isInterface": false,
              "isAbstract": true,
              "isMap": false
            }},
            "type": "Any"
          }
        },
        "successCallback": {
          "name": "onSuccess",
          "description": "",
          "modelProperties": {},
          "parameterGroupModels": [{
            "name": "Post processing action",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false
            },
            "description": "",
            "modelProperties": {},
            "parameters": [
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "false",
                "description": "Whether each file should be deleted after processing or not",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {"typeId": "boolean"},
                  "type": "Boolean"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "autoDelete",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 14
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"pathModel": {
                  "fileExtensions": [],
                  "acceptsUrls": false,
                  "location": "EXTERNAL",
                  "type": "DIRECTORY"
                }},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "If provided, each processed file will be moved to a directory pointed by this path.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "moveToDirectory",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 15
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "This parameter works in tandem with moveToDirectory. Use this parameter to enter the name under which the file should be moved. Do not set this parameter if moveToDirectory hasn't been set as well.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "renameTo",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 16
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "true",
                "description": "Whether any of the post actions (autoDelete and moveToDirectory) should also be applied in case the file failed to be processed. If set to false, no failed files will be moved nor deleted.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {"typeId": "boolean"},
                  "type": "Boolean"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "applyPostActionWhenFailed",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 17
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }
            ],
            "exclusiveParametersModels": [],
            "showInDsl": false
          }]
        },
        "outputAttributes": {
          "hasDynamicType": false,
          "description": "",
          "modelProperties": {},
          "type": {
            "format": "java",
            "type": "@ref:org.mule.extension.ftp.api.ftp.FtpFileAttributes"
          }
        },
        "supportsStreaming": true,
        "requiresConnection": true,
        "runsOnPrimaryNodeOnly": false,
        "name": "listener",
        "terminateCallbackModel": {
          "name": "onTerminate",
          "description": "",
          "modelProperties": {},
          "parameterGroupModels": []
        },
        "stereotype": {
          "parent": {
            "parent": {
              "namespace": "MULE",
              "type": "SOURCE"
            },
            "namespace": "FTP",
            "type": "SOURCE"
          },
          "namespace": "FTP",
          "type": "LISTENER"
        },
        "nestedComponents": [],
        "transactional": false,
        "notifications": [],
        "errors": []
      }],
      "name": "config",
      "description": "Default configuration",
      "modelProperties": {"requiredForMetadata": {"requiredParameters": [
        "defaultWriteEncoding",
        "timeBetweenSizeCheck",
        "timeBetweenSizeCheckUnit",
        "name"
      ]}},
      "stereotype": {
        "parent": {
          "namespace": "MULE",
          "type": "MODULE_CONFIG"
        },
        "namespace": "FTP",
        "type": "CONFIG"
      },
      "parameterGroupModels": [{
        "name": "General",
        "layoutModel": {
          "password": false,
          "query": false,
          "text": false,
          "order": 1
        },
        "description": "",
        "modelProperties": {},
        "parameters": [
          {
            "displayModel": {
              "summary": "This parameter is deprecated and will not be taken into account",
              "displayName": "Default write encoding(DEPRECATED)"
            },
            "semanticTerms": [],
            "role": "BEHAVIOUR",
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "String"
            },
            "required": false,
            "expressionSupport": "SUPPORTED",
            "fieldValueProviderModels": [],
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": false,
              "allowsReferences": false
            },
            "name": "defaultWriteEncoding",
            "layoutModel": {
              "password": false,
              "tabName": "Advanced",
              "query": false,
              "text": false,
              "order": 1
            },
            "allowedStereotypeModels": [],
            "isComponentId": false
          },
          {
            "displayModel": {"summary": "Wait time between size checks to determine if a file is ready to be read."},
            "semanticTerms": [],
            "role": "BEHAVIOUR",
            "description": "Wait time between size checks to determine if a file is ready to be read. This allows a file write to complete before processing. If no value is provided, the check will not be performed. When enabled, Mule performs two size checks waiting the specified time between calls. If both checks return the same value, the file is ready to be read.This attribute works in tandem with #timeBetweenSizeCheckUnit.",
            "modelProperties": {},
            "type": {
              "format": "java",
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Long",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "required": false,
            "expressionSupport": "SUPPORTED",
            "fieldValueProviderModels": [],
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": false,
              "allowsReferences": false
            },
            "name": "timeBetweenSizeCheck",
            "layoutModel": {
              "password": false,
              "tabName": "Advanced",
              "query": false,
              "text": false,
              "order": 2
            },
            "allowedStereotypeModels": [],
            "isComponentId": false
          },
          {
            "displayModel": {"summary": "Time unit to be used in the wait time between size checks"},
            "semanticTerms": [],
            "role": "BEHAVIOUR",
            "defaultValue": "MILLISECONDS",
            "description": "A TimeUnit which qualifies the #timeBetweenSizeCheck attribute. <p> Defaults to MILLISECONDS",
            "modelProperties": {},
            "type": {
              "format": "java",
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "java.lang.Enum",
                  "classname": "java.util.concurrent.TimeUnit",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "java.util.concurrent.TimeUnit",
                "enum": {
                  "values": [
                    "NANOSECONDS",
                    "MICROSECONDS",
                    "MILLISECONDS",
                    "SECONDS",
                    "MINUTES",
                    "HOURS",
                    "DAYS"
                  ],
                  "type": "[Ljava.lang.String;"
                }
              },
              "type": "String"
            },
            "required": false,
            "expressionSupport": "SUPPORTED",
            "fieldValueProviderModels": [],
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": false,
              "allowsReferences": false
            },
            "name": "timeBetweenSizeCheckUnit",
            "layoutModel": {
              "password": false,
              "tabName": "Advanced",
              "query": false,
              "text": false,
              "order": 3
            },
            "allowedStereotypeModels": [],
            "isComponentId": false
          },
          {
            "semanticTerms": [],
            "role": "BEHAVIOUR",
            "description": "The identifier of this element used to reference it in other components",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "String"
            },
            "required": true,
            "expressionSupport": "NOT_SUPPORTED",
            "fieldValueProviderModels": [],
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": false,
              "allowsReferences": false
            },
            "name": "name",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false,
              "order": 5
            },
            "allowedStereotypeModels": [],
            "isComponentId": true
          },
          {
            "semanticTerms": [],
            "role": "BEHAVIOUR",
            "description": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit.",
            "modelProperties": {
              "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 4},
              "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                "localPart": "expiration-policy",
                "prefix": "mule",
                "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
              }}
            },
            "type": {
              "format": "java",
              "annotations": {
                "typeDsl": {
                  "allowTopLevelDefinition": false,
                  "allowInlineDefinition": true
                },
                "infrastructureType": {},
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "org.mule.runtime.extension.api.runtime.ExpirationPolicy",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": true,
                  "isAbstract": true,
                  "isMap": false
                },
                "description": {"value": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit."},
                "typeId": "org.mule.runtime.extension.api.runtime.ExpirationPolicy"
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {
                    "description": {"value": "A scalar time value for the maximum amount of time a dynamic configuration instance should be allowed to be idle before it's considered eligible for expiration"},
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "default": "5",
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "maxIdleTime"}
                },
                {
                  "annotations": {
                    "description": {"value": "A time unit that qualifies the maxIdleTime attribute"},
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "default": "MINUTES",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "key": {"name": "timeUnit"}
                }
              ]
            },
            "required": false,
            "expressionSupport": "NOT_SUPPORTED",
            "fieldValueProviderModels": [],
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": true,
              "allowsReferences": false
            },
            "name": "expirationPolicy",
            "layoutModel": {
              "password": false,
              "tabName": "Advanced",
              "query": false,
              "text": false,
              "order": 4
            },
            "allowedStereotypeModels": [],
            "isComponentId": false
          }
        ],
        "exclusiveParametersModels": [],
        "showInDsl": false
      }],
      "connectionProviders": [{
        "displayModel": {
          "summary": "Connection to connect against an FTP server",
          "displayName": "FTP Connection"
        },
        "externalLibraryModels": [],
        "semanticTerms": [],
        "connectionManagementType": "POOLING",
        "supportsConnectivityTesting": true,
        "name": "connection",
        "description": "Connects to an FTP server",
        "modelProperties": {"requiredForMetadata": {"requiredParameters": [
          "workingDir",
          "transferMode",
          "passive",
          "remoteVerificationEnabled",
          "controlEncoding",
          "proxy",
          "connectionTimeout",
          "connectionTimeoutUnit",
          "responseTimeout",
          "responseTimeoutUnit",
          "host",
          "port",
          "username",
          "password"
        ]}},
        "stereotype": {
          "parent": {
            "namespace": "MULE",
            "type": "CONNECTION"
          },
          "namespace": "FTP",
          "type": "CONNECTION"
        },
        "parameterGroupModels": [
          {
            "name": "General",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false,
              "order": 1
            },
            "description": "",
            "modelProperties": {},
            "parameters": [
              {
                "displayModel": {
                  "summary": "The directory to be considered as the root of every relative path used with this connector",
                  "displayName": "Working Directory"
                },
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "The directory to be considered as the root of every relative path used with this connector. If not provided, it will default to the remote server default.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "workingDir",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"summary": "Transfer mode to be used"},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "BINARY",
                "description": "The transfer mode to be used. Currently BINARY and ASCII are supported. <p> Defaults to BINARY",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": [],
                      "parent": "java.lang.Enum",
                      "classname": "org.mule.extension.ftp.api.ftp.FtpTransferMode",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    },
                    "typeId": "org.mule.extension.ftp.api.ftp.FtpTransferMode",
                    "enum": {
                      "values": [
                        "BINARY",
                        "ASCII"
                      ],
                      "type": "[Ljava.lang.String;"
                    }
                  },
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "transferMode",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"summary": "Whether to use passive mode. Set to \"false\" to switch to active mode"},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "true",
                "description": "Whether to use passive mode. Set to false to switch to active mode. <p> Defaults to true.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {"typeId": "boolean"},
                  "type": "Boolean"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "passive",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 7
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {
                  "summary": "Whether to verify if the remote host taking part of a data connection is the same as the host to which the control connection is attached or not",
                  "displayName": "Enable Remote Verification"
                },
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "true",
                "description": "Enable/disable verification that the remote host taking part of a data connection is the same as the host to which the control connection is attached.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {"typeId": "boolean"},
                  "type": "Boolean"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "remoteVerificationEnabled",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 8
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {
                  "summary": "Set the control encoding (for example UTF-8) to use in the control channel with the remote server. This does NOT set the encoding for the content of the files to be transferred.",
                  "displayName": "Control Encoding"
                },
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "ISO-8859-1",
                "description": "Set the control encoding to use in the control channel with the remote server. This does NOT set the encoding for the content of the files to be transferred. <p> Known control encodings: <ul> <li>ISO-8859-1<\/li> <li>UTF-8<\/li> <\/ul>",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "valueProviderModel": {
                  "partOrder": 1,
                  "requiresConnection": false,
                  "isOpen": true,
                  "providerId": "org.mule.extension.ftp.internal.connection.ControlEncodingValueProvider",
                  "requiresConfiguration": false,
                  "modelProperties": {},
                  "parameters": [],
                  "providerName": "controlEncoding"
                },
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "controlEncoding",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 9
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"summary": "Enables you to set HTTP or HTTPS tunnel proxy."},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "@ref:org.mule.extension.ftp.api.proxy.ProxySettings"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": true
                },
                "name": "proxy",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 10
                },
                "allowedStereotypeModels": [{
                  "namespace": "FTP",
                  "type": "PROXY_SETTINGS"
                }],
                "isComponentId": false
              }
            ],
            "exclusiveParametersModels": [],
            "showInDsl": false
          },
          {
            "name": "Timeout Configuration",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false,
              "order": 2
            },
            "description": "",
            "modelProperties": {},
            "parameters": [
              {
                "displayModel": {"summary": "Connection timeout value"},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "10",
                "description": "A scalar value representing the amount of time to wait before a connection attempt times out. This attribute works in tandem with #connectionTimeoutUnit. <p> Defaults to 10",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": ["java.lang.Comparable"],
                      "parent": "java.lang.Number",
                      "classname": "java.lang.Integer",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    },
                    "int": {}
                  },
                  "type": "Number"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "connectionTimeout",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"summary": "Time unit to be used in the Connection Timeout"},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "SECONDS",
                "description": "A TimeUnit which qualifies the #connectionTimeout attribute. <p> Defaults to SECONDS",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": [],
                      "parent": "java.lang.Enum",
                      "classname": "java.util.concurrent.TimeUnit",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    },
                    "typeId": "java.util.concurrent.TimeUnit",
                    "enum": {
                      "values": [
                        "NANOSECONDS",
                        "MICROSECONDS",
                        "MILLISECONDS",
                        "SECONDS",
                        "MINUTES",
                        "HOURS",
                        "DAYS"
                      ],
                      "type": "[Ljava.lang.String;"
                    }
                  },
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "connectionTimeoutUnit",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"summary": "Response timeout value"},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "10",
                "description": "A scalar value representing the amount of time to wait before a request for data times out. This attribute works in tandem with #responseTimeoutUnit. <p> Defaults to 10",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": ["java.lang.Comparable"],
                      "parent": "java.lang.Number",
                      "classname": "java.lang.Integer",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    },
                    "int": {}
                  },
                  "type": "Number"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "responseTimeout",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "displayModel": {"summary": "Time unit to be used in the Response Timeout"},
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "defaultValue": "SECONDS",
                "description": "A TimeUnit which qualifies the #responseTimeoutUnit attribute. <p> Defaults to SECONDS",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": [],
                      "parent": "java.lang.Enum",
                      "classname": "java.util.concurrent.TimeUnit",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": false,
                      "isMap": false
                    },
                    "typeId": "java.util.concurrent.TimeUnit",
                    "enum": {
                      "values": [
                        "NANOSECONDS",
                        "MICROSECONDS",
                        "MILLISECONDS",
                        "SECONDS",
                        "MINUTES",
                        "HOURS",
                        "DAYS"
                      ],
                      "type": "[Ljava.lang.String;"
                    }
                  },
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "responseTimeoutUnit",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }
            ],
            "exclusiveParametersModels": [],
            "showInDsl": false
          },
          {
            "name": "Connection",
            "layoutModel": {
              "password": false,
              "query": false,
              "text": false,
              "order": 3
            },
            "description": "",
            "modelProperties": {},
            "parameters": [
              {
                "semanticTerms": ["connectivity.host"],
                "role": "BEHAVIOUR",
                "description": "The FTP server host, such as www.mulesoft.com, localhost, or 192.168.0.1, etc",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": true,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "host",
                "layoutModel": {
                  "password": false,
                  "tabName": "General",
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": ["connectivity.port"],
                "role": "BEHAVIOUR",
                "defaultValue": "21",
                "description": "The port number of the FTP server to connect",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {
                    "classInformation": {
                      "implementedInterfaces": [],
                      "parent": "",
                      "classname": "int",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    },
                    "int": {}
                  },
                  "type": "Number"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "port",
                "layoutModel": {
                  "password": false,
                  "tabName": "General",
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": ["connectivity.username"],
                "role": "BEHAVIOUR",
                "description": "Username for the FTP Server. Required if the server is authenticated.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "username",
                "layoutModel": {
                  "password": false,
                  "tabName": "General",
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Password for the FTP Server. Required if the server is authenticated.",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "type": "String"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "password",
                "layoutModel": {
                  "password": true,
                  "tabName": "General",
                  "query": false,
                  "text": false,
                  "order": 4
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "reconnection",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "typeId": "Reconnection"
                  },
                  "type": "Object",
                  "fields": [
                    {
                      "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                      "model": {
                        "annotations": {"default": "false"},
                        "type": "Boolean"
                      },
                      "key": {"name": "failsDeployment"}
                    },
                    {
                      "annotations": {"description": {"value": "The reconnection strategy to use"}},
                      "model": {
                        "of": [
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              },
                              {
                                "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                "model": {
                                  "annotations": {
                                    "default": "2",
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "count"}
                              }
                            ]
                          },
                          {
                            "annotations": {
                              "infrastructureType": {},
                              "typeId": "reconnect-forever"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                "model": {
                                  "annotations": {
                                    "default": "2000",
                                    "classInformation": {
                                      "implementedInterfaces": ["java.lang.Comparable"],
                                      "parent": "java.lang.Number",
                                      "classname": "java.lang.Long",
                                      "hasDefaultConstructor": false,
                                      "isInstantiable": false,
                                      "isFinal": true,
                                      "genericTypes": [],
                                      "isInterface": false,
                                      "isAbstract": false,
                                      "isMap": false
                                    },
                                    "int": {}
                                  },
                                  "type": "Number"
                                },
                                "key": {"name": "frequency"}
                              },
                              {
                                "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                                "model": {
                                  "annotations": {"default": "true"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "blocking"}
                              }
                            ]
                          }
                        ],
                        "annotations": {
                          "infrastructureType": {},
                          "typeId": "ReconnectionStrategy"
                        },
                        "type": "Union"
                      },
                      "key": {"name": "reconnectionStrategy"}
                    }
                  ]
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnection",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 11
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              },
              {
                "semanticTerms": [],
                "role": "BEHAVIOUR",
                "description": "Characteristics of the connection pool",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 5},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "pooling-profile",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "type": {
                  "format": "java",
                  "annotations": {
                    "infrastructureType": {},
                    "description": {"value": "A pooling profile is used to configure the pooling behaviour of Mule components. Each component can have its own pooling profile."},
                    "typeId": "org.mule.runtime.api.config.PoolingProfile",
                    "typeAlias": {"value": "pooling-profile"}
                  },
                  "type": "Object",
                  "fields": [
                    {
                      "annotations": {"description": {"value": "Controls the maximum number of Mule components that can be borrowed from a session at one time. When set to a negative value, there is no limit to the number of components that may be active at one time. When maxActive is exceeded, the pool is said to be exhausted."}},
                      "model": {
                        "annotations": {
                          "default": "5",
                          "int": {}
                        },
                        "type": "Number"
                      },
                      "key": {"name": "maxActive"}
                    },
                    {
                      "annotations": {"description": {"value": "Controls the maximum number of Mule components that can sit idle in the pool at any time. When set to a negative value, there is no limit to the number of Mule components that may be idle at one time."}},
                      "model": {
                        "annotations": {
                          "default": "5",
                          "int": {}
                        },
                        "type": "Number"
                      },
                      "key": {"name": "maxIdle"}
                    },
                    {
                      "annotations": {"description": {"value": "Specifies the number of milliseconds to wait for a pooled component to become available when the pool is exhausted and the exhaustedAction is set to WHEN_EXHAUSTED_WAIT."}},
                      "model": {
                        "annotations": {
                          "default": "4000",
                          "classInformation": {
                            "implementedInterfaces": ["java.lang.Comparable"],
                            "parent": "java.lang.Number",
                            "classname": "java.lang.Long",
                            "hasDefaultConstructor": false,
                            "isInstantiable": false,
                            "isFinal": true,
                            "genericTypes": [],
                            "isInterface": false,
                            "isAbstract": false,
                            "isMap": false
                          },
                          "int": {}
                        },
                        "type": "Number"
                      },
                      "key": {"name": "maxWait"}
                    },
                    {
                      "annotations": {"description": {"value": "Determines the minimum amount of time an object may sit idle in the pool before it is eligible for eviction. When non-positive, no objects will be evicted from the pool due to idle time alone."}},
                      "model": {
                        "annotations": {
                          "default": "1800000",
                          "int": {}
                        },
                        "type": "Number"
                      },
                      "key": {"name": "minEvictionMillis"}
                    },
                    {
                      "annotations": {"description": {"value": "Specifies the number of milliseconds between runs of the object evictor. When non-positive, no object evictor is executed."}},
                      "model": {
                        "annotations": {
                          "default": "-1",
                          "int": {}
                        },
                        "type": "Number"
                      },
                      "key": {"name": "evictionCheckIntervalMillis"}
                    },
                    {
                      "annotations": {"description": {"value": "Specifies the behavior of the Mule component pool when the pool is exhausted. Possible values are: \"WHEN_EXHAUSTED_FAIL\", which will throw a NoSuchElementException, \"WHEN_EXHAUSTED_WAIT\", which will block by invoking Object.wait(long) until a new or idle object is available, or WHEN_EXHAUSTED_GROW, which will create a new Mule instance and return it, essentially making maxActive meaningless. If a positive maxWait value is supplied, it will block for at most that many milliseconds, after which a NoSuchElementException will be thrown. If maxThreadWait is a negative value, it will block indefinitely."}},
                      "model": {
                        "annotations": {
                          "default": "WHEN_EXHAUSTED_GROW",
                          "enum": {
                            "values": [
                              "WHEN_EXHAUSTED_GROW",
                              "WHEN_EXHAUSTED_WAIT",
                              "WHEN_EXHAUSTED_FAIL"
                            ],
                            "type": "[Ljava.lang.String;"
                          }
                        },
                        "type": "String"
                      },
                      "key": {"name": "exhaustedAction"}
                    },
                    {
                      "annotations": {"description": {"value": "Determines how components in a pool should be initialized. The possible values are: INITIALISE_NONE (will not load any components into the pool on startup), INITIALISE_ONE (will load one initial component into the pool on startup), or INITIALISE_ALL (will load all components in the pool on startup)"}},
                      "model": {
                        "annotations": {
                          "default": "INITIALISE_ONE",
                          "enum": {
                            "values": [
                              "INITIALISE_NONE",
                              "INITIALISE_ONE",
                              "INITIALISE_ALL"
                            ],
                            "type": "[Ljava.lang.String;"
                          }
                        },
                        "type": "String"
                      },
                      "key": {"name": "initialisationPolicy"}
                    },
                    {
                      "annotations": {"description": {"value": "Whether pooling should be disabled"}},
                      "model": {
                        "annotations": {"default": "false"},
                        "type": "Boolean"
                      },
                      "key": {"name": "disabled"}
                    }
                  ]
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED",
                "fieldValueProviderModels": [],
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "poolingProfile",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 12
                },
                "allowedStereotypeModels": [],
                "isComponentId": false
              }
            ],
            "exclusiveParametersModels": [],
            "showInDsl": false
          }
        ]
      }]
    }],
    "externalLibraries": [],
    "description": "Connects to an FTP server",
    "resources": [],
    "subTypes": [{
      "subTypes": [
        {
          "format": "java",
          "type": "@ref:org.mule.extension.ftp.api.proxy.HttpTunnelProxy"
        },
        {
          "format": "java",
          "type": "@ref:org.mule.extension.ftp.api.proxy.HttpsTunnelProxy"
        }
      ],
      "baseType": {
        "format": "java",
        "type": "@ref:org.mule.extension.ftp.api.proxy.ProxySettings"
      }
    }],
    "modelProperties": {},
    "constructs": [],
    "connectionProviders": [{
      "displayModel": {
        "summary": "Connection to connect against an FTP server",
        "displayName": "FTP Connection"
      },
      "externalLibraryModels": [],
      "semanticTerms": [],
      "connectionManagementType": "POOLING",
      "supportsConnectivityTesting": true,
      "name": "connection",
      "description": "Connects to an FTP server",
      "modelProperties": {"requiredForMetadata": {"requiredParameters": [
        "workingDir",
        "transferMode",
        "passive",
        "remoteVerificationEnabled",
        "controlEncoding",
        "proxy",
        "connectionTimeout",
        "connectionTimeoutUnit",
        "responseTimeout",
        "responseTimeoutUnit",
        "host",
        "port",
        "username",
        "password"
      ]}},
      "stereotype": {
        "parent": {
          "namespace": "MULE",
          "type": "CONNECTION"
        },
        "namespace": "FTP",
        "type": "CONNECTION"
      },
      "parameterGroupModels": [
        {
          "name": "General",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 1
          },
          "description": "",
          "modelProperties": {},
          "parameters": [
            {
              "displayModel": {
                "summary": "The directory to be considered as the root of every relative path used with this connector",
                "displayName": "Working Directory"
              },
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "The directory to be considered as the root of every relative path used with this connector. If not provided, it will default to the remote server default.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "workingDir",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 5
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"summary": "Transfer mode to be used"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "BINARY",
              "description": "The transfer mode to be used. Currently BINARY and ASCII are supported. <p> Defaults to BINARY",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": [],
                    "parent": "java.lang.Enum",
                    "classname": "org.mule.extension.ftp.api.ftp.FtpTransferMode",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "org.mule.extension.ftp.api.ftp.FtpTransferMode",
                  "enum": {
                    "values": [
                      "BINARY",
                      "ASCII"
                    ],
                    "type": "[Ljava.lang.String;"
                  }
                },
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "transferMode",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 6
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"summary": "Whether to use passive mode. Set to \"false\" to switch to active mode"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "true",
              "description": "Whether to use passive mode. Set to false to switch to active mode. <p> Defaults to true.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {"typeId": "boolean"},
                "type": "Boolean"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "passive",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 7
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {
                "summary": "Whether to verify if the remote host taking part of a data connection is the same as the host to which the control connection is attached or not",
                "displayName": "Enable Remote Verification"
              },
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "true",
              "description": "Enable/disable verification that the remote host taking part of a data connection is the same as the host to which the control connection is attached.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {"typeId": "boolean"},
                "type": "Boolean"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "remoteVerificationEnabled",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 8
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {
                "summary": "Set the control encoding (for example UTF-8) to use in the control channel with the remote server. This does NOT set the encoding for the content of the files to be transferred.",
                "displayName": "Control Encoding"
              },
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "ISO-8859-1",
              "description": "Set the control encoding to use in the control channel with the remote server. This does NOT set the encoding for the content of the files to be transferred. <p> Known control encodings: <ul> <li>ISO-8859-1<\/li> <li>UTF-8<\/li> <\/ul>",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "valueProviderModel": {
                "partOrder": 1,
                "requiresConnection": false,
                "isOpen": true,
                "providerId": "org.mule.extension.ftp.internal.connection.ControlEncodingValueProvider",
                "requiresConfiguration": false,
                "modelProperties": {},
                "parameters": [],
                "providerName": "controlEncoding"
              },
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "controlEncoding",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 9
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"summary": "Enables you to set HTTP or HTTPS tunnel proxy."},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "@ref:org.mule.extension.ftp.api.proxy.ProxySettings"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": true,
                "allowsReferences": true
              },
              "name": "proxy",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 10
              },
              "allowedStereotypeModels": [{
                "namespace": "FTP",
                "type": "PROXY_SETTINGS"
              }],
              "isComponentId": false
            }
          ],
          "exclusiveParametersModels": [],
          "showInDsl": false
        },
        {
          "name": "Timeout Configuration",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 2
          },
          "description": "",
          "modelProperties": {},
          "parameters": [
            {
              "displayModel": {"summary": "Connection timeout value"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "10",
              "description": "A scalar value representing the amount of time to wait before a connection attempt times out. This attribute works in tandem with #connectionTimeoutUnit. <p> Defaults to 10",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": ["java.lang.Comparable"],
                    "parent": "java.lang.Number",
                    "classname": "java.lang.Integer",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "int": {}
                },
                "type": "Number"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "connectionTimeout",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 2
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"summary": "Time unit to be used in the Connection Timeout"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "SECONDS",
              "description": "A TimeUnit which qualifies the #connectionTimeout attribute. <p> Defaults to SECONDS",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": [],
                    "parent": "java.lang.Enum",
                    "classname": "java.util.concurrent.TimeUnit",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "java.util.concurrent.TimeUnit",
                  "enum": {
                    "values": [
                      "NANOSECONDS",
                      "MICROSECONDS",
                      "MILLISECONDS",
                      "SECONDS",
                      "MINUTES",
                      "HOURS",
                      "DAYS"
                    ],
                    "type": "[Ljava.lang.String;"
                  }
                },
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "connectionTimeoutUnit",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 1
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"summary": "Response timeout value"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "10",
              "description": "A scalar value representing the amount of time to wait before a request for data times out. This attribute works in tandem with #responseTimeoutUnit. <p> Defaults to 10",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": ["java.lang.Comparable"],
                    "parent": "java.lang.Number",
                    "classname": "java.lang.Integer",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "int": {}
                },
                "type": "Number"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "responseTimeout",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 4
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "displayModel": {"summary": "Time unit to be used in the Response Timeout"},
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "defaultValue": "SECONDS",
              "description": "A TimeUnit which qualifies the #responseTimeoutUnit attribute. <p> Defaults to SECONDS",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": [],
                    "parent": "java.lang.Enum",
                    "classname": "java.util.concurrent.TimeUnit",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "java.util.concurrent.TimeUnit",
                  "enum": {
                    "values": [
                      "NANOSECONDS",
                      "MICROSECONDS",
                      "MILLISECONDS",
                      "SECONDS",
                      "MINUTES",
                      "HOURS",
                      "DAYS"
                    ],
                    "type": "[Ljava.lang.String;"
                  }
                },
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "responseTimeoutUnit",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 3
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            }
          ],
          "exclusiveParametersModels": [],
          "showInDsl": false
        },
        {
          "name": "Connection",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 3
          },
          "description": "",
          "modelProperties": {},
          "parameters": [
            {
              "semanticTerms": ["connectivity.host"],
              "role": "BEHAVIOUR",
              "description": "The FTP server host, such as www.mulesoft.com, localhost, or 192.168.0.1, etc",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": true,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "host",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 1
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "semanticTerms": ["connectivity.port"],
              "role": "BEHAVIOUR",
              "defaultValue": "21",
              "description": "The port number of the FTP server to connect",
              "modelProperties": {},
              "type": {
                "format": "java",
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": [],
                    "parent": "",
                    "classname": "int",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": true,
                    "isMap": false
                  },
                  "int": {}
                },
                "type": "Number"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "port",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 2
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "semanticTerms": ["connectivity.username"],
              "role": "BEHAVIOUR",
              "description": "Username for the FTP Server. Required if the server is authenticated.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "username",
              "layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 3
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Password for the FTP Server. Required if the server is authenticated.",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "String"
              },
              "required": false,
              "expressionSupport": "SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": false,
                "allowsReferences": false
              },
              "name": "password",
              "layoutModel": {
                "password": true,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 4
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
              "modelProperties": {
                "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                  "localPart": "reconnection",
                  "prefix": "mule",
                  "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                }}
              },
              "type": {
                "format": "java",
                "annotations": {
                  "infrastructureType": {},
                  "typeId": "Reconnection"
                },
                "type": "Object",
                "fields": [
                  {
                    "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                    "model": {
                      "annotations": {"default": "false"},
                      "type": "Boolean"
                    },
                    "key": {"name": "failsDeployment"}
                  },
                  {
                    "annotations": {"description": {"value": "The reconnection strategy to use"}},
                    "model": {
                      "of": [
                        {
                          "annotations": {
                            "infrastructureType": {},
                            "typeId": "reconnect"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                              "model": {
                                "annotations": {
                                  "default": "2000",
                                  "classInformation": {
                                    "implementedInterfaces": ["java.lang.Comparable"],
                                    "parent": "java.lang.Number",
                                    "classname": "java.lang.Long",
                                    "hasDefaultConstructor": false,
                                    "isInstantiable": false,
                                    "isFinal": true,
                                    "genericTypes": [],
                                    "isInterface": false,
                                    "isAbstract": false,
                                    "isMap": false
                                  },
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "frequency"}
                            },
                            {
                              "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                              "model": {
                                "annotations": {"default": "true"},
                                "type": "Boolean"
                              },
                              "key": {"name": "blocking"}
                            },
                            {
                              "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                              "model": {
                                "annotations": {
                                  "default": "2",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "count"}
                            }
                          ]
                        },
                        {
                          "annotations": {
                            "infrastructureType": {},
                            "typeId": "reconnect-forever"
                          },
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                              "model": {
                                "annotations": {
                                  "default": "2000",
                                  "classInformation": {
                                    "implementedInterfaces": ["java.lang.Comparable"],
                                    "parent": "java.lang.Number",
                                    "classname": "java.lang.Long",
                                    "hasDefaultConstructor": false,
                                    "isInstantiable": false,
                                    "isFinal": true,
                                    "genericTypes": [],
                                    "isInterface": false,
                                    "isAbstract": false,
                                    "isMap": false
                                  },
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "frequency"}
                            },
                            {
                              "annotations": {"description": {"value": "If false, the reconnection strategy will run in a separate, non-blocking thread"}},
                              "model": {
                                "annotations": {"default": "true"},
                                "type": "Boolean"
                              },
                              "key": {"name": "blocking"}
                            }
                          ]
                        }
                      ],
                      "annotations": {
                        "infrastructureType": {},
                        "typeId": "ReconnectionStrategy"
                      },
                      "type": "Union"
                    },
                    "key": {"name": "reconnectionStrategy"}
                  }
                ]
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": true,
                "allowsReferences": false
              },
              "name": "reconnection",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 11
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            },
            {
              "semanticTerms": [],
              "role": "BEHAVIOUR",
              "description": "Characteristics of the connection pool",
              "modelProperties": {
                "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 5},
                "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                  "localPart": "pooling-profile",
                  "prefix": "mule",
                  "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                }}
              },
              "type": {
                "format": "java",
                "annotations": {
                  "infrastructureType": {},
                  "description": {"value": "A pooling profile is used to configure the pooling behaviour of Mule components. Each component can have its own pooling profile."},
                  "typeId": "org.mule.runtime.api.config.PoolingProfile",
                  "typeAlias": {"value": "pooling-profile"}
                },
                "type": "Object",
                "fields": [
                  {
                    "annotations": {"description": {"value": "Controls the maximum number of Mule components that can be borrowed from a session at one time. When set to a negative value, there is no limit to the number of components that may be active at one time. When maxActive is exceeded, the pool is said to be exhausted."}},
                    "model": {
                      "annotations": {
                        "default": "5",
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "key": {"name": "maxActive"}
                  },
                  {
                    "annotations": {"description": {"value": "Controls the maximum number of Mule components that can sit idle in the pool at any time. When set to a negative value, there is no limit to the number of Mule components that may be idle at one time."}},
                    "model": {
                      "annotations": {
                        "default": "5",
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "key": {"name": "maxIdle"}
                  },
                  {
                    "annotations": {"description": {"value": "Specifies the number of milliseconds to wait for a pooled component to become available when the pool is exhausted and the exhaustedAction is set to WHEN_EXHAUSTED_WAIT."}},
                    "model": {
                      "annotations": {
                        "default": "4000",
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Long",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "key": {"name": "maxWait"}
                  },
                  {
                    "annotations": {"description": {"value": "Determines the minimum amount of time an object may sit idle in the pool before it is eligible for eviction. When non-positive, no objects will be evicted from the pool due to idle time alone."}},
                    "model": {
                      "annotations": {
                        "default": "1800000",
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "key": {"name": "minEvictionMillis"}
                  },
                  {
                    "annotations": {"description": {"value": "Specifies the number of milliseconds between runs of the object evictor. When non-positive, no object evictor is executed."}},
                    "model": {
                      "annotations": {
                        "default": "-1",
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "key": {"name": "evictionCheckIntervalMillis"}
                  },
                  {
                    "annotations": {"description": {"value": "Specifies the behavior of the Mule component pool when the pool is exhausted. Possible values are: \"WHEN_EXHAUSTED_FAIL\", which will throw a NoSuchElementException, \"WHEN_EXHAUSTED_WAIT\", which will block by invoking Object.wait(long) until a new or idle object is available, or WHEN_EXHAUSTED_GROW, which will create a new Mule instance and return it, essentially making maxActive meaningless. If a positive maxWait value is supplied, it will block for at most that many milliseconds, after which a NoSuchElementException will be thrown. If maxThreadWait is a negative value, it will block indefinitely."}},
                    "model": {
                      "annotations": {
                        "default": "WHEN_EXHAUSTED_GROW",
                        "enum": {
                          "values": [
                            "WHEN_EXHAUSTED_GROW",
                            "WHEN_EXHAUSTED_WAIT",
                            "WHEN_EXHAUSTED_FAIL"
                          ],
                          "type": "[Ljava.lang.String;"
                        }
                      },
                      "type": "String"
                    },
                    "key": {"name": "exhaustedAction"}
                  },
                  {
                    "annotations": {"description": {"value": "Determines how components in a pool should be initialized. The possible values are: INITIALISE_NONE (will not load any components into the pool on startup), INITIALISE_ONE (will load one initial component into the pool on startup), or INITIALISE_ALL (will load all components in the pool on startup)"}},
                    "model": {
                      "annotations": {
                        "default": "INITIALISE_ONE",
                        "enum": {
                          "values": [
                            "INITIALISE_NONE",
                            "INITIALISE_ONE",
                            "INITIALISE_ALL"
                          ],
                          "type": "[Ljava.lang.String;"
                        }
                      },
                      "type": "String"
                    },
                    "key": {"name": "initialisationPolicy"}
                  },
                  {
                    "annotations": {"description": {"value": "Whether pooling should be disabled"}},
                    "model": {
                      "annotations": {"default": "false"},
                      "type": "Boolean"
                    },
                    "key": {"name": "disabled"}
                  }
                ]
              },
              "required": false,
              "expressionSupport": "NOT_SUPPORTED",
              "fieldValueProviderModels": [],
              "hasDynamicType": false,
              "isConfigOverride": false,
              "dslConfiguration": {
                "allowTopLevelDefinition": false,
                "allowsInlineDefinition": true,
                "allowsReferences": false
              },
              "name": "poolingProfile",
              "layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false,
                "order": 12
              },
              "allowedStereotypeModels": [],
              "isComponentId": false
            }
          ],
          "exclusiveParametersModels": [],
          "showInDsl": false
        }
      ]
    }],
    "version": "1.6.2",
    "privilegedArtifacts": ["com.mulesoft.connectors:mule-ftps-connector"],
    "importedTypes": [
      {
        "format": "java",
        "annotations": {
          "QName": {"value": {
            "localPart": "scheduling-strategy",
            "prefix": "mule",
            "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
          }},
          "extensibleType": {},
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "",
            "classname": "org.mule.runtime.api.scheduler.SchedulingStrategy",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": true,
            "isAbstract": true,
            "isMap": false
          },
          "typeId": "org.mule.runtime.api.scheduler.SchedulingStrategy",
          "typeAlias": {"value": "SchedulingStrategy"}
        },
        "type": "Object",
        "fields": []
      },
      {
        "format": "java",
        "annotations": {
          "extensibleType": {},
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "",
            "classname": "org.mule.runtime.api.store.ObjectStore",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": true,
            "isAbstract": true,
            "isMap": false
          },
          "typeId": "org.mule.runtime.api.store.ObjectStore",
          "typeAlias": {"value": "ObjectStore"}
        },
        "type": "Object",
        "fields": []
      }
    ],
    "xmlDsl": {
      "schemaVersion": "1.6.2",
      "prefix": "ftp",
      "schemaLocation": "http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd",
      "namespace": "http://www.mulesoft.org/schema/mule/ftp",
      "xsdFileName": "mule-ftp.xsd"
    },
    "operations": [],
    "vendor": "Mulesoft",
    "name": "FTP",
    "privilegedPackages": [
      "org.apache.commons.net",
      "org.apache.commons.net.ftp",
      "org.mule.extension.ftp.internal",
      "org.mule.extension.ftp.internal.connection",
      "org.mule.extension.ftp.internal.source"
    ],
    "category": "COMMUNITY",
    "notifications": [],
    "errors": [
      {
        "parent": "MULE:ANY",
        "error": "FTP:ILLEGAL_PATH",
        "handleable": true
      },
      {
        "error": "MULE:ANY",
        "handleable": true
      },
      {
        "parent": "FTP:CONNECTIVITY",
        "error": "FTP:FILE_DOESNT_EXIST",
        "handleable": true
      },
      {
        "parent": "MULE:CONNECTIVITY",
        "error": "FTP:CONNECTIVITY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:CONNECTIVITY",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "FTP:FILE_NOT_FOUND",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "FTP:ILLEGAL_CONTENT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "FTP:FILE_ALREADY_EXISTS",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "FTP:FILE_LOCK",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:RETRY_EXHAUSTED",
        "handleable": true
      },
      {
        "parent": "FTP:CONNECTIVITY",
        "error": "FTP:UNKNOWN_HOST",
        "handleable": true
      },
      {
        "parent": "FTP:CONNECTIVITY",
        "error": "FTP:CONNECTION_TIMEOUT",
        "handleable": true
      },
      {
        "parent": "FTP:CONNECTIVITY",
        "error": "FTP:FILE_IS_NOT_DIRECTORY",
        "handleable": true
      },
      {
        "parent": "FTP:CONNECTIVITY",
        "error": "FTP:INVALID_CREDENTIALS",
        "handleable": true
      },
      {
        "parent": "FTP:CONNECTIVITY",
        "error": "FTP:SERVICE_NOT_AVAILABLE",
        "handleable": true
      },
      {
        "parent": "FTP:CONNECTIVITY",
        "error": "FTP:DISCONNECTED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "FTP:ACCESS_DENIED",
        "handleable": true
      },
      {
        "parent": "MULE:RETRY_EXHAUSTED",
        "error": "FTP:RETRY_EXHAUSTED",
        "handleable": true
      },
      {
        "parent": "FTP:CONNECTIVITY",
        "error": "FTP:CANNOT_REACH",
        "handleable": true
      }
    ]
  }
}
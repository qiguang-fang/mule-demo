<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.mulesoft.org/schema/mule/xml-module" attributeFormDefault="unqualified" elementFormDefault="qualified">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace"></xs:import>
  <xs:import namespace="http://www.springframework.org/schema/beans" schemaLocation="http://www.springframework.org/schema/beans/spring-beans.xsd"></xs:import>
  <xs:import namespace="http://www.mulesoft.org/schema/mule/core" schemaLocation="http://www.mulesoft.org/schema/mule/core/current/mule.xsd"></xs:import>
  <xs:complexType name="org.mule.module.xml.api.NamespaceMapping">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractExtensionType">
        <xs:attribute type="xs:string" use="required" name="prefix"></xs:attribute>
        <xs:attribute type="xs:string" use="required" name="uri"></xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module" type="xml-module:org.mule.module.xml.api.NamespaceMapping" abstract="true" name="abstract-namespace"></xs:element>
  <xs:element xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module" substitutionGroup="xml-module:abstract-namespace" name="namespace">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="xml-module:org.mule.module.xml.api.NamespaceMapping"></xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="org.mule.module.xml.api.NamespaceDirectory">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractExtensionType">
        <xs:sequence minOccurs="0" maxOccurs="1">
          <xs:element minOccurs="0" maxOccurs="1" name="namespaces">
            <xs:complexType>
              <xs:sequence>
                <xs:element xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module" minOccurs="0" maxOccurs="unbounded" ref="xml-module:abstract-namespace"></xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute type="mule:substitutableName" use="optional" name="namespaces"></xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns:mule="http://www.mulesoft.org/schema/mule/core" substitutionGroup="mule:abstract-shared-extension" abstract="true" name="abstract-namespace-directory"></xs:element>
  <xs:element xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module" substitutionGroup="xml-module:abstract-namespace-directory" name="namespace-directory">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="xml-module:org.mule.module.xml.api.NamespaceDirectory">
          <xs:attribute type="xs:string" use="optional" name="name"></xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element xmlns:mule="http://www.mulesoft.org/schema/mule/core" substitutionGroup="mule:abstract-shared-extension" name="config">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="mule:abstractExtensionType">
          <xs:annotation>
            <xs:documentation>Default configuration</xs:documentation>
          </xs:annotation>
          <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:element minOccurs="0" maxOccurs="1" ref="mule:expiration-policy"></xs:element>
            <xs:element minOccurs="0" maxOccurs="1" name="namespaces">
              <xs:annotation>
                <xs:documentation>Allows to globally map prefixes to namespace uris. On this version, the xpath-extract operation is the only one to consume these mappings</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module" minOccurs="0" maxOccurs="unbounded" ref="xml-module:abstract-namespace"></xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute type="mule:substitutableName" use="optional" name="namespaces">
            <xs:annotation>
              <xs:documentation>Allows to globally map prefixes to namespace uris. On this version, the xpath-extract operation is the only one to consume these mappings</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/xml-module" type="org.mule.module.xml.api.EntityExpansionEnumType" use="optional" default="NEVER" name="expandEntities">
            <xs:annotation>
              <xs:documentation>Defines how to treat entity expansion. Setting a value different than NEVER renders the application vulnerable to XXE and/or DoS attacks</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="required" name="name">
            <xs:annotation>
              <xs:documentation>The identifier of this element used to reference it in other components</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/xml-module" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="ValidateSchemaType" substitutionGroup="mule:abstract-operator" name="validate-schema">
    <xs:annotation>
      <xs:documentation>Validates that the input content is compliant with a given schema. This operation supports referencing many schemas (using comma as a separator) which include each other.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ValidateSchemaType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractOperatorType">
        <xs:sequence minOccurs="0" maxOccurs="1">
          <xs:element type="xs:string" minOccurs="0" maxOccurs="1" name="content">
            <xs:annotation>
              <xs:documentation>the XML content to validate</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute type="mule:expressionString" use="required" name="schemas">
          <xs:annotation>
            <xs:documentation>The path to the schema file. You can specify multiple schema locations by using a comma separator</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/xml-module" type="org.mule.module.xml.api.SchemaLanguageEnumType" use="optional" default="W3C" name="schemaLanguage">
          <xs:annotation>
            <xs:documentation>The schema language to use.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/xml-module" type="org.mule.module.xml.api.EntityExpansionEnumType" use="optional" name="expandEntities"></xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="config-ref">
          <xs:annotation>
            <xs:documentation>The name of the configuration to be used to execute this component</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/xml-module" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="XpathExtractType" substitutionGroup="mule:abstract-operator" name="xpath-extract">
    <xs:annotation>
      <xs:documentation>Evaluates an XPath expression the input content and returns the result. &lt;p&gt; Because XPath expressions can match any number of individual elements, this operation returns a List of Strings. If no element matched the expression, an empty list will be returned. &lt;p&gt; XPath expressions are also namespace aware, which is why this operation allows setting namespace mappings. These mappings will be merged with those optionally defined in the referenced namespace-directory, meaning that the evaluation will combine both sets of namespace mappings.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="XpathExtractType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractOperatorType">
        <xs:sequence minOccurs="0" maxOccurs="1">
          <xs:element type="xs:string" minOccurs="0" maxOccurs="1" name="content">
            <xs:annotation>
              <xs:documentation>the XML content on which the XPath is evaluated</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element type="xs:string" minOccurs="0" maxOccurs="1" name="context-properties">
            <xs:annotation>
              <xs:documentation>Properties that wil be made available to the transform context.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="namespaces">
            <xs:annotation>
              <xs:documentation>namespace mappings that will be used in this evaluation. They will be combined with the ones in the config element</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module" minOccurs="0" maxOccurs="unbounded" ref="xml-module:abstract-namespace"></xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute type="mule:expressionString" use="required" name="xpath">
          <xs:annotation>
            <xs:documentation>the XPath script</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="mule:expressionList" use="optional" name="namespaces">
          <xs:annotation>
            <xs:documentation>namespace mappings that will be used in this evaluation. They will be combined with the ones in the config element</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="namespaceDirectory">
          <xs:annotation>
            <xs:documentation>the namespace directory from which take base namespace mappings</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="mule:expressionBoolean" use="optional" default="false" name="addTrailingNewlines">
          <xs:annotation>
            <xs:documentation>adds a newline character (\n) at the end of every xml-part result</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/xml-module" type="org.mule.module.xml.api.EntityExpansionEnumType" use="optional" name="expandEntities"></xs:attribute>
        <xs:attribute type="mule:expressionString" use="optional" name="outputMimeType">
          <xs:annotation>
            <xs:documentation>The mime type of the payload that this operation outputs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="config-ref">
          <xs:annotation>
            <xs:documentation>The name of the configuration to be used to execute this component</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="target">
          <xs:annotation>
            <xs:documentation>The name of a variable on which the operation's output will be placed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="mule:expressionString" use="optional" default="#[payload]" name="targetValue">
          <xs:annotation>
            <xs:documentation>An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/xml-module" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="XqueryTransformType" substitutionGroup="mule:abstract-operator" name="xquery-transform">
    <xs:annotation>
      <xs:documentation>Uses XQuery to transform the input content. You can set transformation context properties which will be made available on the XQuery execution</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="XqueryTransformType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractOperatorType">
        <xs:sequence minOccurs="0" maxOccurs="1">
          <xs:element type="xs:string" minOccurs="0" maxOccurs="1" name="content">
            <xs:annotation>
              <xs:documentation>the XML content to transform</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element type="xs:string" minOccurs="0" maxOccurs="1" name="xquery">
            <xs:annotation>
              <xs:documentation>The XQuery script definition</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element type="xs:string" minOccurs="0" maxOccurs="1" name="context-properties">
            <xs:annotation>
              <xs:documentation>Properties that wil be made available to the transform context.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute type="mule:expressionBoolean" use="optional" default="false" name="addTrailingNewlines">
          <xs:annotation>
            <xs:documentation>adds a newline character (\n) at the end of every xml-part result</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/xml-module" type="org.mule.module.xml.api.EntityExpansionEnumType" use="optional" name="expandEntities"></xs:attribute>
        <xs:attribute type="mule:expressionString" use="optional" name="outputMimeType">
          <xs:annotation>
            <xs:documentation>The mime type of the payload that this operation outputs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="config-ref">
          <xs:annotation>
            <xs:documentation>The name of the configuration to be used to execute this component</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="target">
          <xs:annotation>
            <xs:documentation>The name of a variable on which the operation's output will be placed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="mule:expressionString" use="optional" default="#[payload]" name="targetValue">
          <xs:annotation>
            <xs:documentation>An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/xml-module" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="XsltTransformType" substitutionGroup="mule:abstract-operator" name="xslt-transform">
    <xs:annotation>
      <xs:documentation>Uses XSLT to transform the input content. You can set transformation context properties which will be made available on the stylesheet.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="XsltTransformType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractOperatorType">
        <xs:sequence minOccurs="0" maxOccurs="1">
          <xs:element type="xs:string" minOccurs="0" maxOccurs="1" name="content">
            <xs:annotation>
              <xs:documentation>the XML content to transform</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element type="xs:string" minOccurs="0" maxOccurs="1" name="xslt">
            <xs:annotation>
              <xs:documentation>the XSLT script definition</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element type="xs:string" minOccurs="0" maxOccurs="1" name="context-properties">
            <xs:annotation>
              <xs:documentation>Properties that wil be made available to the transform context.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/xml-module" type="org.mule.module.xml.api.EntityExpansionEnumType" use="optional" name="expandEntities"></xs:attribute>
        <xs:attribute type="mule:expressionString" use="optional" name="outputMimeType">
          <xs:annotation>
            <xs:documentation>The mime type of the payload that this operation outputs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="config-ref">
          <xs:annotation>
            <xs:documentation>The name of the configuration to be used to execute this component</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="target">
          <xs:annotation>
            <xs:documentation>The name of a variable on which the operation's output will be placed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="mule:expressionString" use="optional" default="#[payload]" name="targetValue">
          <xs:annotation>
            <xs:documentation>An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="org.mule.module.xml.api.EntityExpansionEnumType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="NEVER"></xs:enumeration>
          <xs:enumeration value="INTERNAL"></xs:enumeration>
          <xs:enumeration value="ALL"></xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="org.mule.module.xml.api.SchemaLanguageEnumType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="W3C"></xs:enumeration>
          <xs:enumeration value="RELAXNG"></xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
</xs:schema>